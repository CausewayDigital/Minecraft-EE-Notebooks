def mark_iron(direction: str):\n    if direction is not \"forward\":\n        say(\"Direction can only be forward\")\n        raise Exception(\"Direction can oly be forward\")\n    if ore_detector(\"forward\") == \"iron_ore\"\n        agent.place(1, \"up\")\n    else:\n        say(\"Block infront of agent is not iron ore!\")\n        raise Exception(\"Block infront of agent is not iron ore\")\n\ndef mark_diamond(direction: str):\n    if direction is not \"forward\":\n        say(\"Direction can only be forward\")\n        raise Exception(\"Direction can oly be forward\")\n    if ore_detector(\"forward\") == \"diamond_ore\"\n        agent.place(2, \"up\")\n    else:\n        say(\"Block infront of agent is not diamond ore!\")\n        raise Exception(\"Block infront of agent is not diamond ore\")\n\ndef ore_detector(direction: str):\n    block = agent.inspect(direction)\n    if block == \"light_gray_terracotta\":\n        return \"diamond_ore\"\n    elif block == \"orange_terracotta\":\n        return \"iron_ore\"\n    else:\n        return block\n\ndef mark_other(direction: str):\n    if direction is not \"forward\":\n        say(\"Direction can only be forward\")\n        raise Exception(\"Direction can oly be forward\")\n    else:\n        agent.place(3, \"up\")\n\n@user-code\n